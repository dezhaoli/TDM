<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:components="components.*" creationComplete="creationComplete()" verticalGap="1">

	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		
		.data {
			backgroundAlpha: 1; 
			backgroundColor: #FFFFFF; 
			alternatingItemColors: #F0F0F0, #FFFFFF; 
			horizontalGridLines: false; 
			letterSpacing: 0; 
			horizontalGridLineColor: #B2B2B2; 
			verticalGridLineColor: #B2B2B2; 
			rollOverColor: #BDEAF5; 
			textRollOverColor: #000000; 
			borderThickness: 0; 
			border-style:none; 
			selectionColor: #63BACF; 
			color: #000000; 
			textSelectedColor: #000000; 
			textIndent: 0; 
			dropShadowEnabled: false; 
			text-align:left; 
			padding-left:20; 
			fontWeight: normal;
			symbolColor: #545454; 
		}
		
		.customScrollBarStyle
		{
			thumb-skin: ClassReference("skins.scrollbar.vertical.ScrollbarThumbSkin");
			track-skin: ClassReference("skins.scrollbar.vertical.ScrollbarTrackSkin");
			down-arrow-skin: Embed(source="../../assets/scroll_bar_button_down.png");
			up-arrow-skin: Embed(source="../../assets/scroll_bar_button_up.png");
		}
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			
			public var item:Object;
			public var addFunc:Function;
			[Bindable]
			private var _dataFilterd:ArrayCollection = new ArrayCollection();
			private var _source:Dictionary;
			public var kvExcelMap:Dictionary
			private function creationComplete():void
			{
				
				filter.addEventListener("enter",clearAndFind,false,0,true);
				filter.addEventListener(Filter.CHANGED, clearAndFind, false, 0, true);
				datagrid.dataProvider = _dataFilterd;
			}
			public function showItem(datas:Dictionary):void{
				var item:Object;
				_source = datas;
				if(kvExcelMap){
					for each(item in _source){
						
						var info:Object = kvExcelMap[item.name];
						if(info){
							if(info is Array){
								info = info[0]
							}
							item.name_cn = info.word_zh;
						}else{
							item.name_cn = ""
						}
						if(item.title){
							info = kvExcelMap[item.title];
							if(info){
								if(info is Array){
									info = info[0]
								}
								item.title_cn = info.word_zh;
							}else{
								item.title_cn = ""
							}
						}else{
							item.title = "";
							item.title_cn = ""
						}
					}
				}
				
				clearAndFind();
			}
			public function clearAndFind(event:Event = null):void
			{
				var item:Object;
				_dataFilterd.removeAll();
				datagrid.horizontalScrollPosition = 0;
				
				if(filter.words.length ==0){
					for each(item in _source){
						_dataFilterd.addItem(item);
					}
					
					return;
				}
				
				var findstr:String = filter.text.toLowerCase();
				
				var lineIndex:int = 1;
				
				for each(item in _source){
					if ( item.name.toLowerCase().indexOf(findstr) != -1 ||
						(item.title && item.title.toLowerCase().indexOf(findstr) != -1) ||
						item.name_cn.toLowerCase().indexOf(findstr) != -1 ||
						(item.title_cn && item.title_cn.toLowerCase().indexOf(findstr) != -1)
						) {
						_dataFilterd.addItem(item);
					}
				}
			}
			public function onItemChange(e:ListEvent):void{
				item = datagrid.selectedItem;
				if(item ){
					nameTf.text = item.name_cn;
					idTf.text = item.id;
				}
			}
			public function onClick(e:MouseEvent):void{
				var num:int = int(numTf.text);
				var id:int = int(idTf.text);
				if(id>0 && num > 0){
					addFunc(id,num);
				}
			}
			
		]]>
	</fx:Script>
	
	<s:SkinnableContainer width="100%" height="23" backgroundColor="#DDDDDD">
		<s:layout>
			<s:HorizontalLayout gap="5" verticalAlign="middle" paddingLeft="10" paddingRight="2"/>
		</s:layout>
		
		<s:Label text="id:" height="8" paddingLeft="2" />
		<s:TextInput id="idTf"  text="" width="100" height="100%" borderColor="#b2b2b2" skinClass="skins.TextInputSkin"/>
		
		<s:Label id="nameTf" text="" height="12" width="150" />
		
		<s:Label text="number: " height="8"/>
		<s:TextInput id="numTf"  text="400" width="100" height="100%" borderColor="#b2b2b2" skinClass="skins.TextInputSkin"/>
		<s:Button id="addItemBt" label="添加"  skinClass="skins.button.GMDefaultButton" click="onClick(event)"/>
	</s:SkinnableContainer>
	<s:SkinnableContainer width="100%" height="100%">
		<mx:DataGrid id="datagrid" width="100%" height="100%" itemClick="onItemChange(event)" selectionDuration="0" styleName="data" headerBackgroundSkin="skins.datagrid.DatagridHeader" headerSeparatorSkin="skins.datagrid.DatagridHeaderDivider" doubleClickEnabled="true" verticalScrollPolicy="auto" verticalScrollBarStyleName="customScrollBarStyle" headerHeight="21" rowHeight="23">
			<mx:columns>
				<mx:DataGridColumn headerText="title" dataField="title" editable="false" >
					<mx:itemRenderer>
						<fx:Component>
							<mx:Label text="{data['title']+data['title_cn']}" paddingLeft="5" paddingRight="5" truncateToFit="true"/>
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				
				<mx:DataGridColumn headerText="name" dataField="name" editable="false" >
					<mx:itemRenderer>
						<fx:Component>
							<mx:Label text="{data['name']}" paddingLeft="5" paddingRight="5" truncateToFit="true"/>
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="name_cn" dataField="name_cn" editable="false" >
					<mx:itemRenderer>
						<fx:Component>
							<mx:Label text="{data['name_cn']}" paddingLeft="5" paddingRight="5" truncateToFit="true"/>
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
			</mx:columns>
		</mx:DataGrid>
		<mx:HRule top="0" width="100%" chromeColor="#B2B2B2"/>
	</s:SkinnableContainer>
	<s:HGroup height="18" width="100%" verticalAlign="middle">
		<s:Label text="filter: " height="8" verticalCenter="0"/>
		<components:Filter id="filter"  width="100%" verticalCenter="0"/>
	</s:HGroup>
</mx:VBox>
